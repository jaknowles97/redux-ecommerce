{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andrew\\\\personalProjects\\\\redux-ecommerce\\\\client\\\\src\\\\components\\\\ProductList\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\";\n\nfunction ProductList() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const {\n    currentCategory\n  } = state;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then(products => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Our Products:\"), state.products.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, filterProducts().map(product => /*#__PURE__*/React.createElement(ProductItem, {\n    key: product._id,\n    _id: product._id,\n    image: product.image,\n    name: product.name,\n    price: product.price,\n    quantity: product.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"You haven't added any products yet!\"), loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }) : null);\n}\n\nexport default ProductList;","map":{"version":3,"sources":["C:/Users/andrew/personalProjects/redux-ecommerce/client/src/components/ProductList/index.js"],"names":["React","useEffect","ProductItem","useDispatch","useSelector","UPDATE_PRODUCTS","useQuery","QUERY_PRODUCTS","idbPromise","spinner","ProductList","dispatch","state","currentCategory","loading","data","type","products","forEach","product","then","filterProducts","filter","category","_id","length","map","image","name","price","quantity"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,KAAK,GAAGR,WAAW,CAACQ,KAAK,IAAIA,KAAV,CAAzB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAsBD,KAA5B;AAEA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBT,QAAQ,CAACC,cAAD,CAAlC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGc,IAAH,EAAS;AACPJ,MAAAA,QAAQ,CAAC;AACJK,QAAAA,IAAI,EAAEX,eADF;AAELY,QAAAA,QAAQ,EAAEF,IAAI,CAACE;AAFV,OAAD,CAAR;AAIEF,MAAAA,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAuBC,OAAD,IAAa;AACjCX,QAAAA,UAAU,CAAC,UAAD,EAAa,KAAb,EAAoBW,OAApB,CAAV;AACD,OAFD;AAGH,KARD,MAQO,IAAI,CAACL,OAAL,EAAc;AACnBN,MAAAA,UAAU,CAAC,UAAD,EAAa,KAAb,CAAV,CAA8BY,IAA9B,CAAoCH,QAAD,IAAc;AAC/CN,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEX,eADC;AAERY,UAAAA,QAAQ,EAAEA;AAFF,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAjBQ,EAiBN,CAACF,IAAD,EAAOD,OAAP,EAAgBH,QAAhB,CAjBM,CAAT;;AAmBA,WAASU,cAAT,GAA0B;AACxB,QAAI,CAACR,eAAL,EAAsB;AACpB,aAAOD,KAAK,CAACK,QAAb;AACD;;AAED,WAAOL,KAAK,CAACK,QAAN,CAAeK,MAAf,CAAsBH,OAAO,IAAIA,OAAO,CAACI,QAAR,CAAiBC,GAAjB,KAAyBX,eAA1D,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGD,KAAK,CAACK,QAAN,CAAeQ,MAAf,gBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,cAAc,GAAGK,GAAjB,CAAqBP,OAAO,iBACzB,oBAAC,WAAD;AACE,IAAA,GAAG,EAAGA,OAAO,CAACK,GADhB;AAEE,IAAA,GAAG,EAAEL,OAAO,CAACK,GAFf;AAGE,IAAA,KAAK,EAAEL,OAAO,CAACQ,KAHjB;AAIE,IAAA,IAAI,EAAER,OAAO,CAACS,IAJhB;AAKE,IAAA,KAAK,EAAET,OAAO,CAACU,KALjB;AAME,IAAA,QAAQ,EAAEV,OAAO,CAACW,QANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADD,gBAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAhBJ,EAkBIhB,OAAO,gBACT;AAAK,IAAA,GAAG,EAAEL,OAAV;AAAmB,IAAA,GAAG,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAC4B,IAnBvC,CADF;AAuBD;;AAED,eAAeC,WAAf","sourcesContent":["  \r\nimport React, { useEffect } from \"react\";\r\nimport ProductItem from \"../ProductItem\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport spinner from \"../../assets/spinner.gif\"\r\n\r\nfunction ProductList() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if(data) {\r\n      dispatch({\r\n           type: UPDATE_PRODUCTS,\r\n          products: data.products\r\n        });\r\n        data.products.forEach((product) => {\r\n          idbPromise('products', 'put', product);\r\n        });\r\n    } else if (!loading) {\r\n      idbPromise('products', 'get').then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n         products: products\r\n       });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(product => product.category._id === currentCategory);\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Products:</h2>\r\n      {state.products.length ? (\r\n        <div className=\"flex-row\">\r\n            {filterProducts().map(product => (\r\n                <ProductItem\r\n                  key= {product._id}\r\n                  _id={product._id}\r\n                  image={product.image}\r\n                  name={product.name}\r\n                  price={product.price}\r\n                  quantity={product.quantity}\r\n                />\r\n            ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any products yet!</h3>\r\n      )}\r\n      { loading ? \r\n      <img src={spinner} alt=\"loading\" />: null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}